import { Comment, Root, Rule } from 'postcss';

import { SelectorDefinition, VariableDefinition } from './types';

export function generateCSS(
  containers: Record<string, { selectors: SelectorDefinition[]; variables: VariableDefinition[] }>
) {
  const root = new Root();
  const variablesRules = [];

  for (const [key, { variables, selectors }] of Object.entries(containers)) {
    const variablesRule = new Rule({ selector: key, raws: { semicolon: true } }).append(...variables);
    variablesRules.push(variablesRule);

    const selectorsRules = selectors.map(({ selector, ...node }) =>
      new Rule({ selector, raws: { before: '\n\n' } }).append(node)
    );

    root.append(...selectorsRules);
  }

  const fileComment = new Comment({ text: 'Generated by @ngneat/variabless ðŸ’Ž' });
  root.prepend(fileComment, ...variablesRules);

  return root.toString();
}
